<controls:MetroWindow x:Class="RomSetManager.Views.Dialogs.BestMatchFilter.BestMatchFilterDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:constants="clr-namespace:Model.Constants;assembly=Model"
             xmlns:views="clr-namespace:RomSetManager.Views"
             mc:Ignorable="d" 
                      WindowTitleBrush="DimGray"
                      Height="{Binding SystemParameters.PrimaryScreenHeight}" 
                      Width="{Binding SystemParameters.PrimaryScreenWidth}"
             d:DesignHeight="800" d:DesignWidth="800"
                      BorderThickness="3" 
                      GlowBrush="DimGray"
                      ResizeMode="CanResizeWithGrip"
                      WindowTransitionsEnabled="False"
                      WindowStartupLocation="CenterScreen">

    <controls:MetroWindow.Resources>
        <Style x:Key="UpDownBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Width" Value="25"></Setter>
        </Style>
        <Style x:Key="DialogButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Margin" Value="5 0 0 0"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style x:Key="ActionButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Width" Value="130"></Setter>
            <Setter Property="Margin" Value="5 0 0 0"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
    </controls:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" LastChildFill="True">
            <GroupBox Header="Information" DockPanel.Dock="Top">
                <TextBlock>
                    Choose your favorites, MUST HAVES, Dont'ts,etc..
                </TextBlock>
            </GroupBox>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="5*"/>
                </Grid.RowDefinitions>

                <GroupBox Header="Favorites (What is most imporant to you.#1=most important)" Grid.Row="0" Grid.Column="0" Background="GreenYellow">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Column="0">
                            <DataGrid x:Name="FavoriteGrid" ItemsSource="{Binding FavoriteItems}" AutoGenerateColumns="False" 
                                      CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeRows="false" CanUserSortColumns="False"
                                      cal:Message.Attach="[Event SelectionChanged] = [Action GridSelectionChanged($source,'Favorite')]"
                                      SelectedIndex="{Binding FavoriteSelectedIndex}"  >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="#" Binding="{Binding Position}" Width="30"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="System" Binding="{Binding System}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}"></DataGridTextColumn>
                                    <!--<DataGridComboBoxColumn Header="Include" ItemsSource="{Binding Source={views:EnumBindingSource {x:Type constants:IncludeType}}}" SelectedItemBinding="{Binding Include}"></DataGridComboBoxColumn>-->
                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <Button x:Name="FavoriteItemUp" Style="{StaticResource UpDownBtn}">
                                <fa:FontAwesome Icon="ArrowUp"/>
                            </Button>
                            <Button x:Name="FavoriteItemDown" Style="{StaticResource UpDownBtn}">
                                <fa:FontAwesome Icon="ArrowDown" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                <GroupBox Header="I don't care (You don't care about these items if they appear in the rom-names or not)" Grid.Row="2" Grid.Column="0" Background="LightGray">
                    <DockPanel>
                        <DataGrid x:Name="DontCareGrid" ItemsSource="{Binding DontCareItems}" AutoGenerateColumns="False"
                                  CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeRows="false" CanUserSortColumns="True"
                                  cal:Message.Attach="[Event SelectionChanged] = [Action GridSelectionChanged($source,'DontCare')]"
                                  SelectedIndex="{Binding DontCareSelectedIndex}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" Binding="{Binding Value}"></DataGridTextColumn>
                                <DataGridTextColumn Header="System" Binding="{Binding System}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Type" Binding="{Binding Type}"></DataGridTextColumn>
                                <!--<DataGridComboBoxColumn Header="Include" ItemsSource="{Binding Source={views:EnumBindingSource {x:Type constants:IncludeType}}}" SelectedItemBinding="{Binding Include}"></DataGridComboBoxColumn>-->
                                <DataGridTextColumn Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </GroupBox>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0">
                    <Button x:Name="AddSelectedToFavorite" Style="{StaticResource ActionButton}" Background="GreenYellow">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Add to Favorites</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="AddSelectedToDontCare" Style="{StaticResource ActionButton}" Background="LightGray">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Add to 'I dont care'</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="AddSelectedToMustHaves" Style="{StaticResource ActionButton}" Background="Blue" Foreground="White">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Add to 'MUST HAVES'</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button x:Name="AddSelectedToNeverUse" Style="{StaticResource ActionButton}" Background="OrangeRed" Foreground="White">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Add to 'NEVER use'</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
                <GroupBox Grid.Row="0" Grid.Column="1" Header="Must HAVES!! (These items HAVE to be present in the rom file-name)" Background="Blue">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0">
                                <CheckBox IsChecked="{Binding IgnoreMustHaveForOneRom}">Ignore these settings if there is only one rom available for a game.</CheckBox>
                        </TextBlock>
                        <DataGrid x:Name="MustHaveGrid" ItemsSource="{Binding MustHavesItems}" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1"
                                  CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeRows="false" CanUserSortColumns="True"
                                  cal:Message.Attach="[Event SelectionChanged] = [Action GridSelectionChanged($source,'MustHave')]" 
                                  SelectedIndex="{Binding MustHavesSelectedIndex}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" Binding="{Binding Value}"></DataGridTextColumn>
                                <DataGridTextColumn Header="System" Binding="{Binding System}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Type" Binding="{Binding Type}"></DataGridTextColumn>
                                <!--<DataGridComboBoxColumn Header="Include" ItemsSource="{Binding Source={views:EnumBindingSource {x:Type constants:IncludeType}}}" SelectedItemBinding="{Binding Include}"></DataGridComboBoxColumn>-->
                                <DataGridTextColumn Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="2" Grid.Column="1" Header="NEVER use these!! (No matter what happens. If roms have one of these, I never want them)" Background="OrangeRed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0">
                                <CheckBox IsChecked="{Binding IgnoreNeverUseForOneRom}">Ignore these settings if there is only one rom available for a game.</CheckBox>
                        </TextBlock>
                        <DataGrid x:Name="NeverUseGrid" ItemsSource="{Binding NeverUseItems}" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1"
                                  CanUserAddRows="false" CanUserDeleteRows="false" CanUserResizeRows="false" CanUserSortColumns="True"
                                  cal:Message.Attach="[Event SelectionChanged] = [Action GridSelectionChanged($source,'NeverUse')]" 
                                  SelectedIndex="{Binding NeverUseSelectedIndex}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" Binding="{Binding Value}"></DataGridTextColumn>
                                <DataGridTextColumn Header="System" Binding="{Binding System}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Type" Binding="{Binding Type}"></DataGridTextColumn>
                                <!--<DataGridComboBoxColumn Header="Include" ItemsSource="{Binding Source={views:EnumBindingSource {x:Type constants:IncludeType}}}" SelectedItemBinding="{Binding Include}"></DataGridComboBoxColumn>-->
                                <DataGridTextColumn Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </Grid>
        </DockPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0,0,10,0">
            <Button x:Name="Ok" Style="{StaticResource DialogButton}">OK</Button>
            <Button x:Name="Cancel" Style="{StaticResource DialogButton}">Cancel</Button>
        </StackPanel>
    </Grid>

</controls:MetroWindow>
